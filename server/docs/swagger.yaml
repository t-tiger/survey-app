basePath: /api
definitions:
  entity.User:
    properties:
      email:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  handler.checkAuthResponse:
    properties:
      user:
        $ref: '#/definitions/entity.User'
    type: object
  handler.errResponse:
    properties:
      message:
        type: string
    type: object
  handler.loginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  handler.loginResponse:
    properties:
      user:
        $ref: '#/definitions/entity.User'
    type: object
  handler.respondentCreateRequest:
    properties:
      email:
        type: string
      name:
        type: string
      option_ids:
        items:
          type: string
        type: array
      survey_id:
        type: string
    type: object
  handler.respondentResponse:
    properties:
      id:
        type: string
      survey_id:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: Server caller for survey backend API.
  title: Survey backend API
  version: "0.1"
paths:
  /check_auth:
    get:
      operationId: check-auth
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.checkAuthResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errResponse'
      security:
      - ApiKeyAuth: []
      summary: Check user authentication state
  /login:
    post:
      consumes:
      - application/json
      operationId: login
      parameters:
      - description: Authentication data
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/handler.loginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.loginResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.errResponse'
      summary: Authenticate User
  /logout:
    post:
      operationId: logout
      responses:
        "204":
          description: ""
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.errResponse'
      security:
      - ApiKeyAuth: []
      summary: Clear user authentication state
  /respondents:
    get:
      operationId: respondent-list
      parameters:
      - description: Answered user's email address
        in: query
        name: email
        required: true
        type: string
      - description: Answered user's name
        in: query
        name: name
        required: true
        type: string
      - description: Comma separated ids of survey
        in: query
        name: surveyIds
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handler.respondentResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errResponse'
      summary: List of respondent
    post:
      consumes:
      - application/json
      operationId: respondent-create
      parameters:
      - description: Respondent data
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/handler.respondentCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handler.respondentResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errResponse'
      summary: Create respondent for survey
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
